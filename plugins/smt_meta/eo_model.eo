(include "../../plugins/desugar/eo_desugar_gen.eo")

; This file is expected to define:
; (1) A function $eo_model_lookup, which defines an arbitrary function corresponding to a model.
; (2) A function $eo_is_sat_model, which defines whether a (Boolean) term is satisfied by a model.

; Conceptually, returns the model value for constant with identifier id and type T.
(declare-parameterized-const $eo_model_lookup ((id Int) (T Type)) T)


; TODO: specification for forall is a (non-computable) function
;(declare-parameterized-const $eo_model_var_to_id ((T Type)) (-> T Int))
;(declare-parameterized-const $eo_model_value_enum ((T Type)) (-> Int T))
;(program $eo_model_evaluate_forall ((xs @List)

; An evaluator for all terms that we can reason about models.
(program $eo_model_evaluate ((T Type) (U Type) (V Type) (x T) (f (-> U T)) (y V) (z V) (n Int))
  :signature (T) T
  (
  ; @const is the CPC syntax for constants
  (($eo_model_evaluate (@const n T))        ($eo_model_lookup n T))
  ; For equality, we use $are_distinct_terms which is more general than $run_evaluate.
  ; This side condition is part of the trusted core.
  (($eo_model_evaluate (_ (= y) z))         (eo::define ((fmy ($eo_model_evaluate y)))
                                            (eo::define ((fmz ($eo_model_evaluate z)))
                                            (eo::ite (eo::eq fmy fmz)
                                              true
                                              (eo::requires ($are_distinct_terms fmy fmz) true false)))))
  ; TODO: other operators go here
  ; Use the CPC run_evaluate side condition for all operators returning an atomic value.
  ; This side condition is part of the trusted core.
  (($eo_model_evaluate (f y))           (eo::define ((fme ($eo_model_evaluate f)))
                                        (eo::define ((fmy ($eo_model_evaluate y)))
                                        (eo::define ((ev ($run_evaluate (_ fme fmy))))
                                          ev)))) ; TODO: sequence and set operators can go here
  (($eo_model_evaluate x)               x)
  )
)


;;; the verification condition


