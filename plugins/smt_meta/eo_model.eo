
(declare-const Stuck Type)

; these will be custom defined in the smt2
(program $sm_is_Boolean () :signature ($eo_Numeral) Bool)
(program $sm_is_Numeral () :signature ($eo_Numeral) Bool)
(program $sm_is_Rational () :signature ($eo_Rational) Bool)
(program $sm_is_String () :signature ($eo_String) Bool)
(program $sm_is_String () :signature ($eo_Binary) Bool)

;;; Boolean operators

; these will be custom defined in the smt2
(program $sm_Binary_not ((T Type)) :signature (T) T)
(program $sm_Binary_and ((T Type)) :signature (T T) T)
(program $sm_Binary_or ((T Type)) :signature (T T) T)
(program $sm_Binary_xor ((T Type)) :signature (T T) T)

; program: $eo_not
(define-fun $eo_not ((x1 sm.Term)) sm.Term
  (ite ($sm_is_Bool x1)
    ($sm_Boolean ($smt_apply_1 "not" x1))
  (ite ($sm_is_Binary x1)
    ($sm_Binary_not x1)
    sm.Stuck)))

; program: $eo_and
(define-fun $eo_and ((x1 sm.Term) (x2 sm.Term)) sm.Term
  (ite (and ($sm_is_Boolean x1) ($sm_is_Boolean x2))
    ($sm_Boolean ($smt_apply_2 "and" (= x1 sm.True) (= x2 sm.True)))
  (ite (and ($sm_is_Binary x1) ($sm_is_Binary x2))
    ($sm_Binary_and x1 x2)
    sm.Stuck)))

; program: $eo_or
(define-fun $eo_or ((x1 sm.Term) (x2 sm.Term)) sm.Term
  (ite (and ($sm_is_Boolean x1) ($sm_is_Boolean x2))
    ($sm_Boolean ($smt_apply_2 "or" (= x1 sm.True) (= x2 sm.True)))
  (ite (and ($sm_is_Binary x1) ($sm_is_Binary x2)
    ($sm_Binary_or x1 x2)
    sm.Stuck)))

; program: $eo_xor
(define-fun $eo_xor ((x1 sm.Term) (x2 sm.Term)) sm.Term
  (ite (and ($sm_is_Boolean x1) ($sm_is_Boolean x2))
    ($sm_Boolean (xor (= x1 sm.True) (= x2 sm.True)))
  (ite (and ($sm_is_Binary x1) ($sm_is_Binary x2))
    ($sm_Binary_xor x1 x2)
    sm.Stuck)))











(program $sm_Binary_+ ((T Type)) :signature (T T) T)

(define $eo_add ((T Type :implicit) (x1 T) (x2 T))
  (eo::ite (and ($eo_is_ok x1) ($eo_is_ok x2))
    (eo::ite (and ($sm_is_Numeral x1) ($sm_is_Numeral x2))
      ($smt_to_z ($smt_apply_2 "+" ($eo_z_to_smt x1) ($eo_z_to_smt x2)))
    (eo::ite (and ($sm_is_Rational x1) ($sm_is_Rational x2))
      ($smt_to_q ($smt_apply_2 "+" ($eo_q_to_smt x1) ($eo_q_to_smt x2)))
    (eo::ite (and ($sm_is_Binary x1) ($sm_is_Binary x2))
      ($sm_Binary_+ ($eo_bin_to_smt x1) ($eo_bin_to_smt x2))
      Stuck)))))
