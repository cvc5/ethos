(declare-parameterized-const = ((A Type :implicit)) (-> A A Bool))

(declare-const and (-> Bool Bool Bool) :left-assoc)
(declare-type Int ())
(declare-const < (-> Int Int Bool))
(declare-const <= (-> Int Int Bool) :chainable and)
(declare-const - (-> Int Int Int))
(declare-const +1 (-> Int Int))

(declare-const BitVec (-> Int Type)) 
(declare-const extract
    (-> (! Int :var m :syntax <numeral> :implicit :restrict (< 0 m))
        (! Int :var i :syntax <numeral> :restrict (< i m))
        (! Int :var j :syntax <numeral> :restrict (<= 0 j i))
        (! Int :var k :syntax <numeral> :implicit :restrict (= k (+1 (- i j))))
        (BitVec m) (BitVec k)))
