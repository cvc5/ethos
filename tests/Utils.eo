
(declare-type @Pair (Type Type))
(declare-parameterized-const @pair ((U Type :implicit) (T Type :implicit)) (-> U T (@Pair U T)))


; `check_true b`
; returns true if b is true, returns false otherwise
(program check_true ((b Bool))
  :signature (Bool) Bool
  (
    ((check_true true) true)
    ((check_true b) false)
  )
)

; untyped list
(declare-type @List ())
(declare-const @list.nil @List)
(declare-parameterized-const @list ((T Type :implicit)) (-> T @List @List) :right-assoc-nil @list.nil)

