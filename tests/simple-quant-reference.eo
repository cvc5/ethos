(declare-type Int ())
(declare-const > (-> Int Int Bool))
(declare-const < (-> Int Int Bool))
(declare-consts <numeral> Int)
(declare-type @List ())
(declare-const @list.nil @List)
(declare-parameterized-const @list.cons ((T Type :implicit)) (-> T @List @List) :right-assoc-nil @list.nil)
(declare-const forall (-> @List Bool Bool) :binder @list.cons)
(reference "simple-quant.smt2")
(assume @p0 (forall ((x Int)) (< x x)))
